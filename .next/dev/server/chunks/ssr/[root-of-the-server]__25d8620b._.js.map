{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 14, "column": 0}, "map": {"version":3,"sources":["file:///Users/vilmerfrost/frost-demo/app/payroll/ExportCSV.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/payroll/ExportCSV.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/payroll/ExportCSV.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAA6R,GAC1T,2DACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 28, "column": 0}, "map": {"version":3,"sources":["file:///Users/vilmerfrost/frost-demo/app/payroll/ExportCSV.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/payroll/ExportCSV.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/payroll/ExportCSV.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAAyQ,GACtS,uCACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 42, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 50, "column": 0}, "map": {"version":3,"sources":["file:///Users/vilmerfrost/frost-demo/app/payroll/page.tsx"],"sourcesContent":["// app/payroll/page.tsx\nimport { createClient } from '@/utils/supabase/server'\nimport ExportCSV from './ExportCSV'\nimport Link from 'next/link'\n\nfunction sek(n: number) {\n  try { return Number(n ?? 0).toLocaleString('sv-SE', { style: 'currency', currency: 'SEK' }) }\n  catch { return `${Math.round(Number(n ?? 0))} kr` }\n}\nfunction monthRange(isoMonth?: string) {\n  const now = new Date()\n  const [y, m] = (isoMonth ?? `${now.getFullYear()}-${String(now.getMonth() + 1).padStart(2,'0')}`)\n    .split('-')\n    .map(Number)\n  const start = new Date(y, m - 1, 1)\n  const end = new Date(y, m, 1)\n  return { start: start.toISOString(), end: end.toISOString(), label: `${y}-${String(m).padStart(2,'0')}` }\n}\n\nexport default async function PayrollPage({ searchParams }: { searchParams?: Record<string, string> }) {\n  const supabase = createClient()\n  const { data: authData } = await supabase.auth.getUser()\n  const user = authData?.user\n  if (!user) {\n    return <div className=\"mx-auto max-w-xl p-8\">Du är inte inloggad. <a className=\"underline\" href=\"/login\">Logga in</a></div>\n  }\n\n  const claims: any = user.app_metadata ?? user.user_metadata ?? {}\n  const tenantId: string | undefined = claims.tenant_id\n  if (!tenantId) {\n    return <div className=\"mx-auto max-w-xl p-8\">Saknar tenant_id på användaren.</div>\n  }\n\n  const { start, end, label } = monthRange(searchParams?.month)\n\n  // Employees\n  const { data: employeesData } = await supabase\n    .from('employees')\n    .select('id, full_name, email, default_rate_sek')\n    .eq('tenant_id', tenantId)\n    .order('full_name', { ascending: true })\n  const employees = employeesData ?? []\n\n  const nameById = new Map<string, { name: string; email: string }>(\n    employees.map((e: any) => [e.id as string, { name: (e.full_name as string) ?? 'Okänd', email: (e.email as string) ?? '' }])\n  )\n\n  // Entries\n  const { data: entriesData } = await supabase\n    .from('time_entries')\n    .select('employee_id, regular_hours, ob_evening_hours, ob_night_hours, weekend_hours, total_hours, amount_sek')\n    .eq('tenant_id', tenantId)\n    .gte('start_at', start)\n    .lt('start_at', end)\n  const entries = entriesData ?? []\n\n  type Agg = {\n    employee_id: string\n    name: string\n    email: string\n    regular: number\n    eve: number\n    night: number\n    weekend: number\n    total_hours: number\n    amount: number\n  }\n  const byEmp = new Map<string, Agg>()\n  for (const r of entries as any[]) {\n    const id = r?.employee_id as string\n    if (!id) continue\n    if (!byEmp.has(id)) {\n      const meta = nameById.get(id) ?? { name: 'Okänd', email: '' }\n      byEmp.set(id, {\n        employee_id: id,\n        name: meta.name,\n        email: meta.email,\n        regular: 0, eve: 0, night: 0, weekend: 0,\n        total_hours: 0, amount: 0,\n      })\n    }\n    const a = byEmp.get(id)!\n    a.regular += Number(r?.regular_hours ?? 0)\n    a.eve += Number(r?.ob_evening_hours ?? 0)\n    a.night += Number(r?.ob_night_hours ?? 0)\n    a.weekend += Number(r?.weekend_hours ?? 0)\n    a.total_hours += Number(r?.total_hours ?? 0)\n    a.amount += Number(r?.amount_sek ?? 0)\n  }\n  const rows = Array.from(byEmp.values()).sort((a, b) => a.name.localeCompare(b.name))\n\n  const grandHours = rows.reduce((s, r) => s + (r?.total_hours ?? 0), 0)\n  const grandAmount = rows.reduce((s, r) => s + (r?.amount ?? 0), 0)\n\n  const csv = rows.map(r => ({\n    Månad: label,\n    Namn: r.name,\n    Epost: r.email,\n    'Ordinarie (tim)': r.regular.toFixed(2),\n    'OB Kväll (tim)': r.eve.toFixed(2),\n    'OB Natt (tim)': r.night.toFixed(2),\n    'OB Helg (tim)': r.weekend.toFixed(2),\n    'Totalt (tim)': r.total_hours.toFixed(2),\n    'Belopp (SEK)': Number(r.amount ?? 0).toFixed(2),\n  }))\n\n  return (\n    <div className=\"mx-auto max-w-6xl p-6 space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <h1 className=\"text-2xl sm:text-3xl font-bold\">Lönespec – {label}</h1>\n        <div className=\"flex gap-2\">\n          <Link href=\"/admin\" className=\"px-4 py-2 rounded-lg border border-gray-300 bg-white hover:bg-gray-50\">Admin</Link>\n          <ExportCSV rows={csv} fileName={`payroll-${label}.csv`} />\n        </div>\n      </div>\n\n      <div className=\"rounded-xl border bg-white p-5 flex flex-wrap gap-6 justify-between items-center\">\n        <div className=\"text-sm text-gray-700\">\n          Visar registreringar från <span className=\"font-medium\">{new Date(start).toLocaleDateString('sv-SE')}</span> till{' '}\n          <span className=\"font-medium\">{new Date(end).toLocaleDateString('sv-SE')}</span>.\n          &nbsp;Ändra månad via <code className=\"bg-gray-100 px-1 rounded\">?month=YYYY-MM</code>\n          , t.ex. <code className=\"bg-gray-100 px-1 rounded\">?month=2025-10</code>.\n        </div>\n        <div className=\"text-sm\">\n          <span className=\"mr-6\">Totalt: <span className=\"font-semibold\">{grandHours.toFixed(2)} tim</span></span>\n          <span>Belopp: <span className=\"font-semibold\">{sek(grandAmount)}</span></span>\n        </div>\n      </div>\n\n      <div className=\"rounded-xl border bg-white p-5 overflow-x-auto\">\n        <table className=\"min-w-full text-sm\">\n          <thead>\n            <tr className=\"text-left bg-gray-50\">\n              <th className=\"p-3\">Namn</th>\n              <th className=\"p-3\">E-post</th>\n              <th className=\"p-3 text-right\">Ordinarie</th>\n              <th className=\"p-3 text-right\">OB Kväll</th>\n              <th className=\"p-3 text-right\">OB Natt</th>\n              <th className=\"p-3 text-right\">OB Helg</th>\n              <th className=\"p-3 text-right\">Totalt (tim)</th>\n              <th className=\"p-3 text-right\">Belopp</th>\n            </tr>\n          </thead>\n          <tbody className=\"divide-y\">\n            {rows.length === 0 && (\n              <tr><td className=\"p-3 text-gray-500 italic\" colSpan={8}>Inga registreringar denna period.</td></tr>\n            )}\n         {rows.map((r) => (\n  <tr key={r.employee_id} className=\"hover:bg-gray-50\">\n    <td className=\"p-3\">\n      <Link href={`/payroll/${r.employee_id}?month=${label}`} className=\"underline decoration-dotted hover:decoration-solid\">\n        {r.name}\n      </Link>\n    </td>\n    <td className=\"p-3\">{r.email}</td>\n    <td className=\"p-3 text-right\">{r.regular.toFixed(2)}</td>\n    <td className=\"p-3 text-right\">{r.eve.toFixed(2)}</td>\n    <td className=\"p-3 text-right\">{r.night.toFixed(2)}</td>\n    <td className=\"p-3 text-right\">{r.weekend.toFixed(2)}</td>\n    <td className=\"p-3 text-right font-medium\">{r.total_hours.toFixed(2)}</td>\n    <td className=\"p-3 text-right font-semibold\">{sek(r.amount)}</td>\n  </tr>\n))}\n\n          </tbody>\n        </table>\n      </div>\n\n      <div className=\"rounded-xl border bg-white p-5\">\n        <h2 className=\"font-semibold mb-3\">Snabb sammanställning</h2>\n        <div className=\"flex flex-wrap gap-2 text-sm\">\n          <span className=\"px-3 py-1 rounded-full bg-gray-100\">Anställda: <b>{employees.length}</b></span>\n          <span className=\"px-3 py-1 rounded-full bg-gray-100\">Poster: <b>{entries.length}</b></span>\n          <span className=\"px-3 py-1 rounded-full bg-gray-100\">Totalt timmar: <b>{grandHours.toFixed(2)}</b></span>\n          <span className=\"px-3 py-1 rounded-full bg-gray-100\">Belopp: <b>{sek(grandAmount)}</b></span>\n        </div>\n      </div>\n    </div>\n  )\n}\n\n"],"names":[],"mappings":"AAAA,uBAAuB;;;;;;AACvB;AACA;AACA;;;;;AAEA,SAAS,IAAI,CAAS;IACpB,IAAI;QAAE,OAAO,OAAO,KAAK,GAAG,cAAc,CAAC,SAAS;YAAE,OAAO;YAAY,UAAU;QAAM;IAAG,EAC5F,OAAM;QAAE,OAAO,GAAG,KAAK,KAAK,CAAC,OAAO,KAAK,IAAI,GAAG,CAAC;IAAC;AACpD;AACA,SAAS,WAAW,QAAiB;IACnC,MAAM,MAAM,IAAI;IAChB,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,YAAY,GAAG,IAAI,WAAW,GAAG,CAAC,EAAE,OAAO,IAAI,QAAQ,KAAK,GAAG,QAAQ,CAAC,GAAE,MAAM,EAC7F,KAAK,CAAC,KACN,GAAG,CAAC;IACP,MAAM,QAAQ,IAAI,KAAK,GAAG,IAAI,GAAG;IACjC,MAAM,MAAM,IAAI,KAAK,GAAG,GAAG;IAC3B,OAAO;QAAE,OAAO,MAAM,WAAW;QAAI,KAAK,IAAI,WAAW;QAAI,OAAO,GAAG,EAAE,CAAC,EAAE,OAAO,GAAG,QAAQ,CAAC,GAAE,MAAM;IAAC;AAC1G;AAEe,eAAe,YAAY,EAAE,YAAY,EAA6C;IACnG,MAAM,WAAW,IAAA,kJAAY;IAC7B,MAAM,EAAE,MAAM,QAAQ,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,OAAO;IACtD,MAAM,OAAO,UAAU;IACvB,IAAI,CAAC,MAAM;QACT,qBAAO,8OAAC;YAAI,WAAU;;gBAAuB;8BAAqB,8OAAC;oBAAE,WAAU;oBAAY,MAAK;8BAAS;;;;;;;;;;;;IAC3G;IAEA,MAAM,SAAc,KAAK,YAAY,IAAI,KAAK,aAAa,IAAI,CAAC;IAChE,MAAM,WAA+B,OAAO,SAAS;IACrD,IAAI,CAAC,UAAU;QACb,qBAAO,8OAAC;YAAI,WAAU;sBAAuB;;;;;;IAC/C;IAEA,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,WAAW,cAAc;IAEvD,YAAY;IACZ,MAAM,EAAE,MAAM,aAAa,EAAE,GAAG,MAAM,SACnC,IAAI,CAAC,aACL,MAAM,CAAC,0CACP,EAAE,CAAC,aAAa,UAChB,KAAK,CAAC,aAAa;QAAE,WAAW;IAAK;IACxC,MAAM,YAAY,iBAAiB,EAAE;IAErC,MAAM,WAAW,IAAI,IACnB,UAAU,GAAG,CAAC,CAAC,IAAW;YAAC,EAAE,EAAE;YAAY;gBAAE,MAAM,AAAC,EAAE,SAAS,IAAe;gBAAS,OAAO,AAAC,EAAE,KAAK,IAAe;YAAG;SAAE;IAG5H,UAAU;IACV,MAAM,EAAE,MAAM,WAAW,EAAE,GAAG,MAAM,SACjC,IAAI,CAAC,gBACL,MAAM,CAAC,wGACP,EAAE,CAAC,aAAa,UAChB,GAAG,CAAC,YAAY,OAChB,EAAE,CAAC,YAAY;IAClB,MAAM,UAAU,eAAe,EAAE;IAajC,MAAM,QAAQ,IAAI;IAClB,KAAK,MAAM,KAAK,QAAkB;QAChC,MAAM,KAAK,GAAG;QACd,IAAI,CAAC,IAAI;QACT,IAAI,CAAC,MAAM,GAAG,CAAC,KAAK;YAClB,MAAM,OAAO,SAAS,GAAG,CAAC,OAAO;gBAAE,MAAM;gBAAS,OAAO;YAAG;YAC5D,MAAM,GAAG,CAAC,IAAI;gBACZ,aAAa;gBACb,MAAM,KAAK,IAAI;gBACf,OAAO,KAAK,KAAK;gBACjB,SAAS;gBAAG,KAAK;gBAAG,OAAO;gBAAG,SAAS;gBACvC,aAAa;gBAAG,QAAQ;YAC1B;QACF;QACA,MAAM,IAAI,MAAM,GAAG,CAAC;QACpB,EAAE,OAAO,IAAI,OAAO,GAAG,iBAAiB;QACxC,EAAE,GAAG,IAAI,OAAO,GAAG,oBAAoB;QACvC,EAAE,KAAK,IAAI,OAAO,GAAG,kBAAkB;QACvC,EAAE,OAAO,IAAI,OAAO,GAAG,iBAAiB;QACxC,EAAE,WAAW,IAAI,OAAO,GAAG,eAAe;QAC1C,EAAE,MAAM,IAAI,OAAO,GAAG,cAAc;IACtC;IACA,MAAM,OAAO,MAAM,IAAI,CAAC,MAAM,MAAM,IAAI,IAAI,CAAC,CAAC,GAAG,IAAM,EAAE,IAAI,CAAC,aAAa,CAAC,EAAE,IAAI;IAElF,MAAM,aAAa,KAAK,MAAM,CAAC,CAAC,GAAG,IAAM,IAAI,CAAC,GAAG,eAAe,CAAC,GAAG;IACpE,MAAM,cAAc,KAAK,MAAM,CAAC,CAAC,GAAG,IAAM,IAAI,CAAC,GAAG,UAAU,CAAC,GAAG;IAEhE,MAAM,MAAM,KAAK,GAAG,CAAC,CAAA,IAAK,CAAC;YACzB,OAAO;YACP,MAAM,EAAE,IAAI;YACZ,OAAO,EAAE,KAAK;YACd,mBAAmB,EAAE,OAAO,CAAC,OAAO,CAAC;YACrC,kBAAkB,EAAE,GAAG,CAAC,OAAO,CAAC;YAChC,iBAAiB,EAAE,KAAK,CAAC,OAAO,CAAC;YACjC,iBAAiB,EAAE,OAAO,CAAC,OAAO,CAAC;YACnC,gBAAgB,EAAE,WAAW,CAAC,OAAO,CAAC;YACtC,gBAAgB,OAAO,EAAE,MAAM,IAAI,GAAG,OAAO,CAAC;QAChD,CAAC;IAED,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;;4BAAiC;4BAAY;;;;;;;kCAC3D,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,0LAAI;gCAAC,MAAK;gCAAS,WAAU;0CAAwE;;;;;;0CACtG,8OAAC,uIAAS;gCAAC,MAAM;gCAAK,UAAU,CAAC,QAAQ,EAAE,MAAM,IAAI,CAAC;;;;;;;;;;;;;;;;;;0BAI1D,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;4BAAwB;0CACX,8OAAC;gCAAK,WAAU;0CAAe,IAAI,KAAK,OAAO,kBAAkB,CAAC;;;;;;4BAAgB;4BAAM;0CAClH,8OAAC;gCAAK,WAAU;0CAAe,IAAI,KAAK,KAAK,kBAAkB,CAAC;;;;;;4BAAgB;0CAC1D,8OAAC;gCAAK,WAAU;0CAA2B;;;;;;4BAAqB;0CAC9E,8OAAC;gCAAK,WAAU;0CAA2B;;;;;;4BAAqB;;;;;;;kCAE1E,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAK,WAAU;;oCAAO;kDAAQ,8OAAC;wCAAK,WAAU;;4CAAiB,WAAW,OAAO,CAAC;4CAAG;;;;;;;;;;;;;0CACtF,8OAAC;;oCAAK;kDAAQ,8OAAC;wCAAK,WAAU;kDAAiB,IAAI;;;;;;;;;;;;;;;;;;;;;;;;0BAIvD,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAM,WAAU;;sCACf,8OAAC;sCACC,cAAA,8OAAC;gCAAG,WAAU;;kDACZ,8OAAC;wCAAG,WAAU;kDAAM;;;;;;kDACpB,8OAAC;wCAAG,WAAU;kDAAM;;;;;;kDACpB,8OAAC;wCAAG,WAAU;kDAAiB;;;;;;kDAC/B,8OAAC;wCAAG,WAAU;kDAAiB;;;;;;kDAC/B,8OAAC;wCAAG,WAAU;kDAAiB;;;;;;kDAC/B,8OAAC;wCAAG,WAAU;kDAAiB;;;;;;kDAC/B,8OAAC;wCAAG,WAAU;kDAAiB;;;;;;kDAC/B,8OAAC;wCAAG,WAAU;kDAAiB;;;;;;;;;;;;;;;;;sCAGnC,8OAAC;4BAAM,WAAU;;gCACd,KAAK,MAAM,KAAK,mBACf,8OAAC;8CAAG,cAAA,8OAAC;wCAAG,WAAU;wCAA2B,SAAS;kDAAG;;;;;;;;;;;gCAE7D,KAAK,GAAG,CAAC,CAAC,kBAClB,8OAAC;wCAAuB,WAAU;;0DAChC,8OAAC;gDAAG,WAAU;0DACZ,cAAA,8OAAC,0LAAI;oDAAC,MAAM,CAAC,SAAS,EAAE,EAAE,WAAW,CAAC,OAAO,EAAE,OAAO;oDAAE,WAAU;8DAC/D,EAAE,IAAI;;;;;;;;;;;0DAGX,8OAAC;gDAAG,WAAU;0DAAO,EAAE,KAAK;;;;;;0DAC5B,8OAAC;gDAAG,WAAU;0DAAkB,EAAE,OAAO,CAAC,OAAO,CAAC;;;;;;0DAClD,8OAAC;gDAAG,WAAU;0DAAkB,EAAE,GAAG,CAAC,OAAO,CAAC;;;;;;0DAC9C,8OAAC;gDAAG,WAAU;0DAAkB,EAAE,KAAK,CAAC,OAAO,CAAC;;;;;;0DAChD,8OAAC;gDAAG,WAAU;0DAAkB,EAAE,OAAO,CAAC,OAAO,CAAC;;;;;;0DAClD,8OAAC;gDAAG,WAAU;0DAA8B,EAAE,WAAW,CAAC,OAAO,CAAC;;;;;;0DAClE,8OAAC;gDAAG,WAAU;0DAAgC,IAAI,EAAE,MAAM;;;;;;;uCAZnD,EAAE,WAAW;;;;;;;;;;;;;;;;;;;;;;0BAoBlB,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAAqB;;;;;;kCACnC,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAK,WAAU;;oCAAqC;kDAAW,8OAAC;kDAAG,UAAU,MAAM;;;;;;;;;;;;0CACpF,8OAAC;gCAAK,WAAU;;oCAAqC;kDAAQ,8OAAC;kDAAG,QAAQ,MAAM;;;;;;;;;;;;0CAC/E,8OAAC;gCAAK,WAAU;;oCAAqC;kDAAe,8OAAC;kDAAG,WAAW,OAAO,CAAC;;;;;;;;;;;;0CAC3F,8OAAC;gCAAK,WAAU;;oCAAqC;kDAAQ,8OAAC;kDAAG,IAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAK/E","debugId":null}}]
}