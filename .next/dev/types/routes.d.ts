// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/admin" | "/admin/aeta" | "/admin/employees/[id]" | "/auth/callback" | "/components/ui" | "/customers" | "/customers/new" | "/dashboard" | "/error" | "/invoices" | "/invoices/[id]" | "/invoices/new" | "/login" | "/min-tid" | "/onboarding" | "/payroll" | "/payroll/employeeID" | "/projects" | "/projects/[id]" | "/projects/[id]/invoice" | "/projects/new" | "/projects/status" | "/reports/new" | "/tid/ny"
type AppRouteHandlerRoutes = "/api/auth/set-session" | "/api/invoices/[id]" | "/api/invoices/[id]/summarize" | "/api/time-report/offline"
type PageRoutes = never
type LayoutRoutes = "/" | "/components/ui"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/admin": {}
  "/admin/aeta": {}
  "/admin/employees/[id]": { "id": string; }
  "/api/auth/set-session": {}
  "/api/invoices/[id]": { "id": string; }
  "/api/invoices/[id]/summarize": { "id": string; }
  "/api/time-report/offline": {}
  "/auth/callback": {}
  "/components/ui": {}
  "/customers": {}
  "/customers/new": {}
  "/dashboard": {}
  "/error": {}
  "/invoices": {}
  "/invoices/[id]": { "id": string; }
  "/invoices/new": {}
  "/login": {}
  "/min-tid": {}
  "/onboarding": {}
  "/payroll": {}
  "/payroll/employeeID": {}
  "/projects": {}
  "/projects/[id]": { "id": string; }
  "/projects/[id]/invoice": { "id": string; }
  "/projects/new": {}
  "/projects/status": {}
  "/reports/new": {}
  "/tid/ny": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
  "/components/ui": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
