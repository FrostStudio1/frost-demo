{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/vilmerfrost/frost-demo/app/projects/actions.ts"],"sourcesContent":["'use server'\n\nimport { createClient } from '../utils/supabase/server'\nimport { redirect } from 'next/navigation'\n\nexport async function createProject(formData: FormData) {\n  const supabase = createClient()\n\n  const {\n    data: { user },\n    error: userErr,\n  } = await supabase.auth.getUser()\n  if (userErr || !user) {\n    redirect('/login')\n  }\n\n  const name = String(formData.get('name') || '').trim()\n  const customer_name = String(formData.get('customer_name') || '').trim()\n  const customer_email = String(formData.get('customer_email') || '').trim()\n  const customer_address = String(formData.get('customer_address') || '').trim()\n  const customer_orgnr = String(formData.get('customer_orgnr') || '').trim()\n\n  const base_rate_sek = Number(formData.get('base_rate_sek') || 0)\n  const budgeted_hours = Number(formData.get('budgeted_hours') || 0)\n\n  if (!name || !customer_name) {\n    redirect('/projects?err=' + encodeURIComponent('Fyll i projektnamn och kundnamn'))\n  }\n\n  const { error } = await supabase.from('projects').insert([\n    {\n      name,\n      base_rate_sek,\n      budgeted_hours,\n      customer_name,\n      customer_email,\n      customer_address,\n      customer_orgnr,\n    },\n  ])\n\n  if (error) {\n    redirect('/projects?err=' + encodeURIComponent(error.message))\n  }\n\n  redirect('/projects?created=1')\n}\n\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAAA;;;;;AAEO,eAAe,cAAc,QAAkB;IACpD,MAAM,WAAW,IAAA,kJAAY;IAE7B,MAAM,EACJ,MAAM,EAAE,IAAI,EAAE,EACd,OAAO,OAAO,EACf,GAAG,MAAM,SAAS,IAAI,CAAC,OAAO;IAC/B,IAAI,WAAW,CAAC,MAAM;QACpB,IAAA,iMAAQ,EAAC;IACX;IAEA,MAAM,OAAO,OAAO,SAAS,GAAG,CAAC,WAAW,IAAI,IAAI;IACpD,MAAM,gBAAgB,OAAO,SAAS,GAAG,CAAC,oBAAoB,IAAI,IAAI;IACtE,MAAM,iBAAiB,OAAO,SAAS,GAAG,CAAC,qBAAqB,IAAI,IAAI;IACxE,MAAM,mBAAmB,OAAO,SAAS,GAAG,CAAC,uBAAuB,IAAI,IAAI;IAC5E,MAAM,iBAAiB,OAAO,SAAS,GAAG,CAAC,qBAAqB,IAAI,IAAI;IAExE,MAAM,gBAAgB,OAAO,SAAS,GAAG,CAAC,oBAAoB;IAC9D,MAAM,iBAAiB,OAAO,SAAS,GAAG,CAAC,qBAAqB;IAEhE,IAAI,CAAC,QAAQ,CAAC,eAAe;QAC3B,IAAA,iMAAQ,EAAC,mBAAmB,mBAAmB;IACjD;IAEA,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,YAAY,MAAM,CAAC;QACvD;YACE;YACA;YACA;YACA;YACA;YACA;YACA;QACF;KACD;IAED,IAAI,OAAO;QACT,IAAA,iMAAQ,EAAC,mBAAmB,mBAAmB,MAAM,OAAO;IAC9D;IAEA,IAAA,iMAAQ,EAAC;AACX;;;IAzCsB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 57, "column": 0}, "map": {"version":3,"sources":["file:///Users/vilmerfrost/frost-demo/.next-internal/server/app/projects/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {signOut as '0037d1b4c6fcb424e7c16062aeabd7cee739ff8680'} from 'ACTIONS_MODULE0'\nexport {sendMagicLink as '40c061ff68462f6d9579e14509518067fbcf3ba35a'} from 'ACTIONS_MODULE0'\nexport {createProject as '406a51f703daafea0db926285a425af7873589e3a6'} from 'ACTIONS_MODULE1'\n"],"names":[],"mappings":";AAAA;AAEA","debugId":null}}]
}