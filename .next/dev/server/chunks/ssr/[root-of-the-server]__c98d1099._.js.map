{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 14, "column": 0}, "map": {"version":3,"sources":["file:///Users/vilmerfrost/frost-demo/app/admin/page.tsx"],"sourcesContent":["// app/admin/page.tsx\nimport Link from 'next/link'\nimport { createClient } from '@/utils/supabase/server'\n\ntype Emp = {\n  id: string\n  full_name: string\n  email: string | null\n  default_rate_sek: number | null\n}\n\ntype Entry = {\n  employee_id: string\n  total_hours: number | null\n  amount_sek: number | null\n}\n\nfunction sek(n: number) {\n  try {\n    return Number(n ?? 0).toLocaleString('sv-SE', { style: 'currency', currency: 'SEK' })\n  } catch {\n    return `${Math.round(Number(n ?? 0))} kr`\n  }\n}\n\nfunction currentMonthLabel(d = new Date()) {\n  const y = d.getFullYear()\n  const m = String(d.getMonth() + 1).padStart(2, '0')\n  return `${y}-${m}` // YYYY-MM\n}\n\nfunction monthRange(isoMonth?: string) {\n  const now = new Date()\n  const [y, m] = (isoMonth ?? currentMonthLabel(now)).split('-').map(Number)\n  const start = new Date(y, m - 1, 1)\n  const end = new Date(y, m, 1)\n  const label = `${y}-${String(m).padStart(2, '0')}`\n  return { start: start.toISOString(), end: end.toISOString(), label }\n}\n\nexport default async function AdminPage({\n  searchParams,\n}: {\n  searchParams?: Record<string, string>\n}) {\n  const supabase = createClient()\n  const { data: authData } = await supabase.auth.getUser()\n  const user = authData?.user\n  if (!user) {\n    return (\n      <div className=\"mx-auto max-w-xl p-8\">\n        Du är inte inloggad. <a className=\"underline\" href=\"/login\">Logga in</a>\n      </div>\n    )\n  }\n\n  const claims: any = user.app_metadata ?? user.user_metadata ?? {}\n  const tenantId: string | undefined = claims.tenant_id\n  if (!tenantId) {\n    return <div className=\"mx-auto max-w-xl p-8\">Saknar tenant_id på användaren.</div>\n  }\n\n  const { start, end, label } = monthRange(searchParams?.month)\n\n  // Hämta anställda\n  const { data: employeesData, error: empErr } = await supabase\n    .from('employees')\n    .select('id, full_name, email, default_rate_sek')\n    .eq('tenant_id', tenantId)\n    .order('full_name', { ascending: true })\n\n  if (empErr) {\n    return <div className=\"mx-auto max-w-xl p-8\">Kunde inte hämta anställda.</div>\n  }\n\n  const employees: Emp[] = employeesData ?? []\n\n  // Hämta tidrader för innevarande månad\n  const { data: monthEntriesData } = await supabase\n    .from('time_entries')\n    .select('employee_id, total_hours, amount_sek')\n    .eq('tenant_id', tenantId)\n    .gte('start_at', start)\n    .lt('start_at', end)\n\n  const monthEntries: Entry[] = monthEntriesData ?? []\n\n  // Aggregera per anställd\n  const perEmp = new Map<\n    string,\n    { hours: number; amount: number }\n  >()\n\n  for (const e of monthEntries) {\n    const key = e.employee_id\n    const prev = perEmp.get(key) ?? { hours: 0, amount: 0 }\n    prev.hours += Number(e.total_hours ?? 0)\n    prev.amount += Number(e.amount_sek ?? 0)\n    perEmp.set(key, prev)\n  }\n\n  const totalHours = Array.from(perEmp.values()).reduce((s, v) => s + v.hours, 0)\n  const totalAmount = Array.from(perEmp.values()).reduce((s, v) => s + v.amount, 0)\n\n  return (\n    <div className=\"mx-auto max-w-5xl p-6 space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <h1 className=\"text-2xl sm:text-3xl font-bold\">Admin – Översikt</h1>\n        <div className=\"flex gap-2\">\n          <Link\n            href=\"/projects\"\n            className=\"px-4 py-2 rounded-lg border border-gray-300 bg-white hover:bg-gray-50\"\n          >\n            Projekt\n          </Link>\n          <Link\n            href={`/payroll?month=${label}`}\n            className=\"px-4 py-2 rounded-lg bg-blue-600 hover:bg-blue-700 text-white\"\n          >\n            Lönelista ({label})\n          </Link>\n        </div>\n      </div>\n\n      {/* Summering för månaden */}\n      <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-4\">\n        <div className=\"rounded-xl border bg-white p-5\">\n          <div className=\"text-sm text-gray-500\">Period</div>\n          <div className=\"text-xl font-semibold\">{label}</div>\n        </div>\n        <div className=\"rounded-xl border bg-white p-5\">\n          <div className=\"text-sm text-gray-500\">Totala timmar (månad)</div>\n          <div className=\"text-xl font-semibold\">{totalHours.toFixed(2)} h</div>\n        </div>\n        <div className=\"rounded-xl border bg-white p-5\">\n          <div className=\"text-sm text-gray-500\">Total lönekostnad (månad)</div>\n          <div className=\"text-xl font-semibold\">{sek(totalAmount)}</div>\n        </div>\n      </div>\n\n      {/* Tabell med anställda – namn länkar till /payroll/[employeeId]?month=YYYY-MM */}\n      <div className=\"rounded-xl border bg-white overflow-x-auto\">\n        <table className=\"min-w-full text-sm\">\n          <thead>\n            <tr className=\"text-left bg-gray-50\">\n              <th className=\"p-3\">Anställd</th>\n              <th className=\"p-3\">E-post</th>\n              <th className=\"p-3 text-right\">Timmar (månad)</th>\n              <th className=\"p-3 text-right\">Belopp (månad)</th>\n              <th className=\"p-3 text-right\">Baseline timpris</th>\n            </tr>\n          </thead>\n          <tbody className=\"divide-y\">\n            {employees.length === 0 && (\n              <tr>\n                <td className=\"p-3 text-gray-500 italic\" colSpan={5}>\n                  Inga anställda hittades.\n                </td>\n              </tr>\n            )}\n\n            {employees.map((emp) => {\n              const agg = perEmp.get(emp.id) ?? { hours: 0, amount: 0 }\n              return (\n                <tr key={emp.id} className=\"hover:bg-gray-50\">\n                  <td className=\"p-3\">\n                    <Link\n                      href={`/payroll/${emp.id}?month=${label}`}\n                      className=\"underline decoration-dotted hover:decoration-solid\"\n                      title=\"Visa lönespec\"\n                    >\n                      {emp.full_name}\n                    </Link>\n                  </td>\n                  <td className=\"p-3\">{emp.email ?? '—'}</td>\n                  <td className=\"p-3 text-right\">{agg.hours.toFixed(2)}</td>\n                  <td className=\"p-3 text-right font-medium\">{sek(agg.amount)}</td>\n                  <td className=\"p-3 text-right\">\n                    {emp.default_rate_sek != null ? sek(emp.default_rate_sek) : '—'}\n                  </td>\n                </tr>\n              )\n            })}\n          </tbody>\n        </table>\n      </div>\n\n      <p className=\"text-xs text-gray-500\">\n        Tips: klicka på ett namn för att öppna lönespecen för perioden {label}.\n      </p>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}